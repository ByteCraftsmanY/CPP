"Sample": {
		"prefix": "sf",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"$2",
			"int main()",
			"{",
			"\tfreopen(\"#input.txt\", \"r++\", stdin);",
			"\tfreopen(\"#output.txt\", \"w++\", stdout);",
			"\t$1",
			"\treturn 0;",
			"}",
			"$0"
		],
		"description": "Log output to console"
	},
	"Insert Sample": {
		"prefix": "ff",
		"body": [
			"#include <bits/stdc++.h>",
			"using namespace std;",
			"#define REP(i, a, b) for (int i = a; i < b; i++)",
			"#define all(x) x.begin(), x.end()",
			"typedef long long int ll;",
			"typedef vector<int> vi;",
			"typedef pair<int, int> pi;",
			"#define deb(...) logger(#__VA_ARGS__, __VA_ARGS__)",
			"template <typename... Args>",
			"void logger(string vars, Args &&...values)\n{",
			"\tcout << vars << \" = \";",
			"\tstring delim = \"\";",
			"\t(..., (cout << delim << values, delim = \", \"));",
			"}",
			"template <typename... T>",
			"void printer(T &&...args)\n{",
			"\t((cout << args << \" \"), ...);",
			"}",
			"template <typename F>",
			"auto debug_func(const F &func)\n{\n",
			"\treturn [func](auto &&...args) { // forward reference",
			"\t\tcout << \"input = \";",
			"\t\tprinter(args...);",
			"\t\tauto res = func(forward<decltype(args)>(args)...);",
			"\t\tcout << \"res = \" << res << endl;",
			"\t\treturn res;",
			"\t};",
			"}",
			"template <typename F>",
			"auto beautify(const F &func)\n{",
			"\treturn [func](auto &&...args) { // forward reference",
			"\t\tcout << \"========\" << endl;",
			"\t\tfunc(forward<decltype(args)>(args)...);",
			"\t\tcout << \"========\" << endl;",
			"\t};",
			"}",
			"template <typename... T>",
			"void read(T &...args)\n{",
			"\t((cin >> args), ...);",
			"}",
			"template <typename... T>",
			"void write(string delimiter, T &&...args)\n{",
			"\t    ((cout << args << delimiter), ...);",
			"}",
			"template <typename T>",
			"void readContainer(T &t)\n{",
			"\tfor (auto &e : t)",
			"\t\tread(e);",
			"}",
			"template <typename T>",
			"void writeContainer(string delimiter, T &t)\n{",
			"    for (const auto &e : t) ",
			// "{",
			"        write(delimiter, e);",
			// "    }",
			"\twrite(\"\\n\");",
			"}",
			"$2",
			"int main()",
			"{",
			"\tfreopen(\"#input.txt\", \"r++\", stdin);",
			"\tfreopen(\"#output.txt\", \"w++\", stdout);",
			"\tios_base::sync_with_stdio(false);",
			"\tcout.tie(NULL);",
			"\tcin.tie(NULL);",
			"\t$1",
			"\treturn 0;",
			"}",
			"$0"
		],
		"description": "insert sample file"
	}
